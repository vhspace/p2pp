"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
    python setup.py py2app --arch=x86_64  # For Intel
    python setup.py py2app --arch=arm64   # For ARM
"""

import sys
import os
from version import Version, __author__, __email__

if sys.platform == "darwin":
    from setuptools import setup
    import sysconfig
    import shutil
    import os
    import platform
    import argparse

    # Clean build directories if they exist
    if os.path.exists('build'):
        shutil.rmtree('build')
    if os.path.exists('dist'):
        shutil.rmtree('dist')

    # Determine target architecture
    target_arch = None
    if '--arch=x86_64' in sys.argv:
        target_arch = 'x86_64'
        sys.argv.remove('--arch=x86_64')
    elif '--arch=arm64' in sys.argv:
        target_arch = 'arm64'
        sys.argv.remove('--arch=arm64')
    else:
        # Default to native architecture
        target_arch = platform.machine()
        if target_arch == 'x86_64':
            target_arch = 'x86_64'
        elif target_arch == 'arm64':
            target_arch = 'arm64'
        else:
            print(f"Warning: Unknown architecture {target_arch}, defaulting to x86_64")
            target_arch = 'x86_64'

    print(f"Building for architecture: {target_arch}")

    APP = ['P2PP.py']
    DATA_FILES = ['p2pp.ui', 'p2ppconf.ui', "SendError.ui", "p3browser.ui"]
    
    # Base options
    base_options = {
        'argv_emulation': False,
        "iconfile": "icons/icon.icns",
        "includes": [
            'PyQt5.QtWidgets',
            'PyQt5.QtGui', 
            'PyQt5.QtCore',
            'PyQt5.QtWebEngineWidgets',
            'PyQt5.QtWebEngine',
            'PyQt5.QtWebEngineCore'
        ],
        "excludes": [
            "tkinter",
            "matplotlib",
            "numpy",
            "_tkinter",
            "PIL"
        ],
        'packages': ['PyQt5'],
        'strip': False,
        'optimize': 0,
        'plist': {
            'CFBundleName': 'P2PP',
            'CFBundleDisplayName': 'P2PP',
            'CFBundleIdentifier': "com.p2pp.app",
            'CFBundleVersion': "1.0.0",
            'CFBundleShortVersionString': "1.0.0",
            'NSHighResolutionCapable': True,
            'LSMinimumSystemVersion': '11.0',
        }
    }

    # Set architecture-specific options
    if target_arch == 'x86_64':
        base_options['arch'] = 'x86_64'
        base_options['plist']['LSArchitecturePriority'] = ['x86_64']
        print("Configuring for Intel x86_64...")
    elif target_arch == 'arm64':
        base_options['arch'] = 'arm64'
        base_options['plist']['LSArchitecturePriority'] = ['arm64']
        print("Configuring for Apple Silicon ARM64...")
    else:
        raise ValueError(f"Unsupported architecture: {target_arch}")

    OPTIONS = base_options

    setup(
        app=APP,
        data_files=DATA_FILES,
        options={'py2app': OPTIONS},
        setup_requires=['py2app']
    )
    

if sys.platform.startswith('linux'):
    from setuptools import setup, find_packages
    import configparser
    import os

    # Create a temporary config file with the correct format
    temp_config = configparser.ConfigParser()
    temp_config['sdist_dsc'] = {
        'package': 'p2pp',
        'maintainer': 'Tom Van den Eede <P2PP@pandora.be>',
        'build_depends': 'python3-setuptools, python3-all, debhelper (>= 9)',
        'depends': 'python3-qt5 (>= 5.15.0), python3-qtwebengine5 (>= 5.15.0)'
    }

    setup(
        name="p2pp",
        version=Version,
        description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
        author=__author__,
        author_email=__email__,
        packages=find_packages(),
        package_data={
            'p2pp': ['*.ui'],
            '': ['version.py']
        },
        install_requires=[
            'PyQt5>=5.15.0',
            'PyQtWebEngine>=5.15.0',
            'requests>=2.31.0',
            'packaging>=23.2'
        ],
        data_files=[
            ('share/applications', ['p2pp.desktop']),
            ('share/icons/hicolor/128x128/apps', ['icons/icon.ico']),
            ('share/p2pp', [
                'p2pp.ui', 
                'p2ppconf.ui', 
                'SendError.ui', 
                'p3browser.ui'
            ])
        ],
        entry_points={
            'gui_scripts': [
                'p2pp=p2pp:main',
            ],
        }
    )

if sys.platform == "win32":
    import sys
    import version
    from cx_Freeze import setup, Executable

    includefiles = ["p2pp.ui", 'p2ppconf.ui', "icons/icon.ico", "SendError.ui", "p3browser.ui"]
    excludes = ["tkinter"]
    includes = ['PyQt5.QtWidgets', 'PyQt5.QtGui', 'PyQt5.Qt', 'PyQt5', 'PyQt5.QtCore', 'PyQt5.QtWebEngineWidgets']

    build_exe_options = {"packages": ["os"], 'include_files': includefiles, "excludes": excludes, "includes": includes}

   # Simplified MSI options with correct directory structure
    bdist_msi_options = {
        "upgrade_code": "{2E1D0F3B-768A-4E44-9D1C-85A4F8673C80}",
        "add_to_path": False,
        "initial_target_dir": r"[ProgramFilesFolder]\P2PP",
        "directories": [
            ("ProgramMenuFolder", "TARGETDIR", "ProgramMenuFolder")
        ]
    }

    setup(name="p2pp",
          version=version.Version,
          description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
          options={
              "build_exe": build_exe_options,
              "bdist_msi": bdist_msi_options
          },
          executables=[Executable("p2pp.py", 
                                base="Win32GUI", 
                                icon="icons/icon.ico",
                                target_name="P2PP")]
          )