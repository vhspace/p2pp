"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""

import sys
import os

if sys.platform == "darwin":
    from setuptools import setup
    import sysconfig
    import shutil
    import os
    from py2app.build_app import PythonStandalone

    # Clean build directories if they exist
    if os.path.exists('build'):
        shutil.rmtree('build')
    if os.path.exists('dist'):
        shutil.rmtree('dist')

    # Override the copy_file method to handle existing files
    def _copy_file(src, dst, force=False):
        try:
            if os.path.exists(dst):
                os.remove(dst)
            shutil.copy2(src, dst)
        except Exception as e:
            print(f"Warning: Could not copy {src} to {dst}: {e}")

    APP = ['P2PP.py']
    DATA_FILES = ['p2pp.ui', 'p2ppconf.ui', "SendError.ui", "p3browser.ui"]
    OPTIONS = {
        'argv_emulation': True,
        "iconfile": "icons/icon.icns",
        "includes": [
            'PyQt5.QtWidgets',
            'PyQt5.QtGui', 
            'PyQt5.QtCore',
            'PyQt5.QtWebEngineWidgets',
            'PyQt5.QtWebEngine',
            'PyQt5.QtWebEngineCore'
        ],
        "excludes": [
            "tkinter",
            "matplotlib",
            "numpy",
            "_tkinter",
            "PIL"
        ],
        'packages': ['PyQt5'],
        'strip': False,
        'optimize': 0,
        'plist': {
            'CFBundleName': 'P2PP',
            'CFBundleDisplayName': 'P2PP',
            'CFBundleIdentifier': "com.p2pp.app",
            'CFBundleVersion': "1.0.0",
            'CFBundleShortVersionString': "1.0.0",
            'NSHighResolutionCapable': True,
        }
    }

    # Patch shutil.copy2 temporarily for the build
    original_copy2 = shutil.copy2
    shutil.copy2 = _copy_file

    try:
        setup(
            app=APP,
            data_files=DATA_FILES,
            options={'py2app': OPTIONS},
            setup_requires=['py2app']
        )
    finally:
        # Restore original copy2
        shutil.copy2 = original_copy2
    

if sys.platform == "linux":
    import sys
    import version
    from cx_Freeze import setup, Executable

    includefiles = ["p2pp.ui", 'p2ppconf.ui', "icons/icon.ico", "SendError.ui", "p3browser.ui"]
    excludes = ["tkinter"]
    includes = ['PyQt5.QtWidgets', 'PyQt5.QtGui', 'PyQt5.Qt', 'PyQt5', 'PyQt5.QtCore', 'PyQt5.QtWebEngineWidgets']

    build_exe_options = {"packages": ["os", "urllib3", "urllib3.contrib", "urllib3.contrib.appengine"], 'include_files': includefiles, "excludes": excludes, "includes": includes}

    setup(name="p2pp",
          version=version.Version,
          description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
          options={"build_exe": build_exe_options},
          executables=[Executable("P2PP.py", base=None, icon="icons/icon.ico")]
          )


if sys.platform == "win32":
    import sys
    import version
    from cx_Freeze import setup, Executable

    includefiles = ["p2pp.ui", 'p2ppconf.ui', "icons/icon.ico", "SendError.ui", "p3browser.ui"]
    excludes = ["tkinter"]
    includes = ['PyQt5.QtWidgets', 'PyQt5.QtGui', 'PyQt5.Qt', 'PyQt5', 'PyQt5.QtCore', 'PyQt5.QtWebEngineWidgets']

    build_exe_options = {"packages": ["os"], 'include_files': includefiles, "excludes": excludes, "includes": includes}

    setup(name="p2pp",
          version=version.Version,
          description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
          options={"build_exe": build_exe_options},
          executables=[Executable("p2pp.py", base="Win32GUI", icon="icons/icon.ico")]
          )




