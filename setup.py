"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app --arch=<architecture>
    where architecture must be either 'x86_64' or 'arm64'
"""

import sys
import os
import argparse
from version import Version, __author__, __email__

if sys.platform == "darwin":
    from setuptools import setup
    import sysconfig
    import shutil
    import os
    import platform

    # Parse command line arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('--arch', choices=['x86_64', 'arm64'], 
                       required=True,
                       help='Target architecture (x86_64 or arm64)')
    
    # Get all args after 'py2app' command
    py2app_args = sys.argv[sys.argv.index('py2app')+1:] if 'py2app' in sys.argv else []
    arch_args, remaining_args = parser.parse_known_args(py2app_args)
    
    # Put back the remaining args
    sys.argv = [sys.argv[0]] + ['py2app'] + remaining_args

    # Clean build directories if they exist
    if os.path.exists('build'):
        shutil.rmtree('build')
    if os.path.exists('dist'):
        shutil.rmtree('dist')

    APP = ['P2PP.py']
    DATA_FILES = ['p2pp.ui', 'p2ppconf.ui', "SendError.ui", "p3browser.ui"]
    
    # Set architecture-specific options
    arch = arch_args.arch
    dist_dir = f'dist_{arch}'
    build_dir = f'build_{arch}'
    
    OPTIONS = {
        'argv_emulation': False,
        "iconfile": "icons/icon.icns",
        "includes": [
            'PyQt5.QtWidgets',
            'PyQt5.QtGui', 
            'PyQt5.QtCore',
            'PyQt5.QtWebEngineWidgets',
            'PyQt5.QtWebEngine',
            'PyQt5.QtWebEngineCore'
        ],
        "excludes": [
            "tkinter",
            "matplotlib",
            "numpy",
            "_tkinter",
            "PIL"
        ],
        'packages': ['PyQt5'],
        'strip': False,
        'optimize': 0,
        'arch': arch,
        'dist_dir': dist_dir,
        'build_dir': build_dir,
        'plist': {
            'CFBundleName': 'P2PP',
            'CFBundleDisplayName': 'P2PP',
            'CFBundleIdentifier': "com.p2pp.app",
            'CFBundleVersion': "1.0.0",
            'CFBundleShortVersionString': "1.0.0",
            'NSHighResolutionCapable': True,
            'LSMinimumSystemVersion': '11.0',
            'LSArchitecturePriority': [arch]
        }
    }

    setup(
        app=APP,
        data_files=DATA_FILES,
        options={'py2app': OPTIONS},
        setup_requires=['py2app']
    )
    

if sys.platform.startswith('linux'):
    from setuptools import setup, find_packages
    import configparser
    import os

    # Create a temporary config file with the correct format
    temp_config = configparser.ConfigParser()
    temp_config['sdist_dsc'] = {
        'package': 'p2pp',
        'maintainer': 'Tom Van den Eede <P2PP@pandora.be>',
        'build_depends': 'python3-setuptools, python3-all, debhelper (>= 9)',
        'depends': 'python3-qt5 (>= 5.15.0), python3-qtwebengine5 (>= 5.15.0)'
    }

    setup(
        name="p2pp",
        version=Version,
        description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
        author=__author__,
        author_email=__email__,
        packages=find_packages(),
        package_data={
            'p2pp': ['*.ui'],
            '': ['version.py']
        },
        install_requires=[
            'PyQt5>=5.15.0',
            'PyQtWebEngine>=5.15.0',
            'requests>=2.31.0',
            'packaging>=23.2'
        ],
        data_files=[
            ('share/applications', ['p2pp.desktop']),
            ('share/icons/hicolor/128x128/apps', ['icons/icon.ico']),
            ('share/p2pp', [
                'p2pp.ui', 
                'p2ppconf.ui', 
                'SendError.ui', 
                'p3browser.ui'
            ])
        ],
        entry_points={
            'gui_scripts': [
                'p2pp=p2pp:main',
            ],
        }
    )

if sys.platform == "win32":
    import sys
    import version
    from cx_Freeze import setup, Executable

    includefiles = ["p2pp.ui", 'p2ppconf.ui', "icons/icon.ico", "SendError.ui", "p3browser.ui"]
    excludes = ["tkinter"]
    includes = ['PyQt5.QtWidgets', 'PyQt5.QtGui', 'PyQt5.Qt', 'PyQt5', 'PyQt5.QtCore', 'PyQt5.QtWebEngineWidgets']

    build_exe_options = {"packages": ["os"], 'include_files': includefiles, "excludes": excludes, "includes": includes}

   # Simplified MSI options with correct directory structure
    bdist_msi_options = {
        "upgrade_code": "{2E1D0F3B-768A-4E44-9D1C-85A4F8673C80}",
        "add_to_path": False,
        "initial_target_dir": r"[ProgramFilesFolder]\P2PP",
        "directories": [
            ("ProgramMenuFolder", "TARGETDIR", "ProgramMenuFolder")
        ]
    }

    setup(name="p2pp",
          version=version.Version,
          description="P2PP - Palette 2 Post Processing tool for Prusa Slicer",
          options={
              "build_exe": build_exe_options,
              "bdist_msi": bdist_msi_options
          },
          executables=[Executable("p2pp.py", 
                                base="Win32GUI", 
                                icon="icons/icon.ico",
                                target_name="P2PP")]
          )