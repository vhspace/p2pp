name: Build Multi-Platform Binaries

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-common.txt
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          pip install -r requirements-mac.txt
          brew install create-dmg
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          pip install -r requirements-win.txt
        else
          pip install -r requirements-linux.txt
          sudo apt-get update
          sudo apt-get install -y rpm build-essential debhelper python3-all dh-python python3-stdeb
        fi
      shell: bash

    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          rm -rf build/ dist/
          python setup.py py2app
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          python setup.py bdist_msi
        else
          python setup.py bdist_rpm
          python setup.py --command-packages=stdeb.command sdist_dsc --with-python3=True
          cd deb_dist/p2pp-* && dpkg-buildpackage -rfakeroot -uc -us
          cd ../.. && mkdir -p dist/deb && cp deb_dist/*.deb dist/deb/
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: p2pp-${{ matrix.os }}
        path: dist/