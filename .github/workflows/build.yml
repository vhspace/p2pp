name: Build Multi-Platform Binaries

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          source venv/Scripts/activate
        else
          source venv/bin/activate
        fi
      shell: bash

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          pip install py2app
          pip install PyQt5 PyQtWebEngine --no-cache-dir
        else
          pip install cx_Freeze
        fi
      shell: bash

    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          # Clean build directories first
          rm -rf build/ dist/
          # Build with additional flags
          python setup.py py2app --no-strip 
        else
          python setup.py build
        fi
      shell: bash

    - name: Setup tmate session for debugging
      if: failure() && matrix.os == 'macos-latest'
      uses: mxschmitt/action-tmate@v3
      with:
        timeout-minutes: 15
        limit-access-to-actor: true

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: p2pp-${{ matrix.os }}
        path: |
          dist/
          build/

    - name: Create Release
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/**
          build/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
