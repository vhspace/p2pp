name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-all:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-common.txt
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          pip install -r requirements-mac.txt
          brew install create-dmg
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          pip install -r requirements-win.txt
        else
          pip install -r requirements-linux.txt
          sudo apt-get update
          sudo apt-get install -y rpm build-essential debhelper python3-all dh-python python3-stdeb
        fi
      shell: bash

    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          rm -rf build/ dist/
          python setup.py py2app
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          python setup.py bdist_msi
        else
          # Linux builds
          # First build RPM
          python setup.py bdist_rpm
          
          # Then build DEB using direct dpkg tools
          python setup.py sdist
          cd dist
          tar xvf *.tar.gz
          cd p2pp-*
          mkdir debian
          cat > debian/control << EOF
          Source: p2pp
          Maintainer: Tom Van den Eede <P2PP@pandora.be>
          Build-Depends: python3-setuptools, python3-all, debhelper (>= 9)
          
          Package: p2pp
          Architecture: all
          Depends: python3-qt5 (>= 5.15.0), python3-qtwebengine5 (>= 5.15.0)
          Description: P2PP - Palette 2 Post Processing tool for Prusa Slicer
          EOF
          dpkg-buildpackage -us -uc
          cd ..
          mkdir -p deb
          cp *.deb deb/
        fi
      shell: bash


    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}