name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-mac.txt
        brew install create-dmg
        
    - name: Build Universal App
      run: |
        rm -rf build/ dist/
        python setup.py py2app
        
    - name: Create DMG
      run: |
        create-dmg \
          --volname "P2PP" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "P2PP.app" 175 120 \
          --hide-extension "P2PP.app" \
          --app-drop-link 425 120 \
          "dist/P2PP.dmg" \
          "dist/P2PP.app"
          
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/P2PP.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-win.txt
        
    - name: Build Windows Package
      run: |
        python setup.py bdist_msi
        
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*.msi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y rpm build-essential debhelper python3-all dh-python python3-setuptools dh-python python3-pip python3-pybuild-plugin-pyproject
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-linux.txt
        
    - name: Build Linux Packages
      run: |
        # Remove any existing compat files in debian directory
        find . -name "compat" -exec rm -f {} \;
        
        # Build RPM
        python setup.py bdist_rpm
        
        # Build DEB
        python setup.py sdist
        cd dist
        tar xvf *.tar.gz
        cd "$(ls -d p2pp-*)"
        
        # Debug: Check for any compat files
        echo "=== Checking for compat files ==="
        find / -name "compat" 2>/dev/null || true
        
        mkdir -p debian
        cp ../../debian/control debian/
        
        # Force remove compat file again
        rm -f debian/compat
        rm -f ../../debian/compat
        
        chmod +x scripts/post_install.sh
        chmod +x scripts/post_uninstall.sh
        
        dpkg-buildpackage -us -uc
        cd ..
        mkdir -p deb
        cp *.deb deb/
        
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/*.rpm
          dist/deb/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}